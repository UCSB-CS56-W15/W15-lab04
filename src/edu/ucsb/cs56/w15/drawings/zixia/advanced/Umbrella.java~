package edu.ucsb.cs56.w15.drawings.zixia.advanced;
import java.awt.geom.GeneralPath; // combinations of lines and curves
import java.awt.geom.AffineTransform; // translation, rotation, scale
import java.awt.Shape; // general class for shapes

// all imports below this line needed if you are implementing Shape
import java.awt.geom.Point2D;
import java.awt.geom.Line2D;
import java.awt.geom.Rectangle2D;
import java.awt.Rectangle;
import java.awt.geom.PathIterator;
import java.awt.geom.AffineTransform;
import java.awt.geom.Arc2D;

import edu.ucsb.cs56.w15.drawings.utilities.ShapeTransforms;
import edu.ucsb.cs56.w15.drawings.utilities.GeneralPathWrapper;

/**
 A vector drawing of a dog that implements
 the Shape interface, and so can be drawn, as well as
 rotated, scaled, etc.
 
 @author Zixia Weng
 @version for CS56, Winter 14, UCSB
 
*/
public class Umbrella extends GeneralPathWrapper implements Shape
{
    /**
     Constructor
     @param x x coord of lower left corner of Umbrella
     @param y y coord of lower left corner of Umbrella
     @param width width of the Umbrella
     @param height of Umbrella
    */
    public Umbrella(double x, double y, double width, double height)
    {
    Rectangle2D.Double handle =
        new Rectangle2D.Double(x + width/2 - width/20, y - height/2,
                               width/10, height/8);
    Line2D.Double HandleLine = new Line2D.Double(x + width/2, y + height/8, x + width/2, y + height);
        
    Line2D.Double UmbrellaLine = new Line2D.Double (x, y + height/4, x + width, y + height/4);
    
    Arc2D.Double TopOfUmbrella = new Arc2D.Double(x, y , width, height/2, 0, 180, Arc2D.OPEN);
        
    // put the whole unbrella together
    
    GeneralPath wholeUmbrella = this.get();
    wholeUmbrella.append(handle, false);
    wholeUmbrella.append(HandleLine, false);
    wholeUmbrella.append(UmbrellaLine, false);
    wholeUmbrella.append(TopOfUmbrella, false);
    
    }
}
